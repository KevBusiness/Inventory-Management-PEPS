generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  credential Int @unique
  name String?
  lastname String?
  password String
  tickets Ticket[]
  sales Sale[]
  role Role
}

model Ticket {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  type TicketType
  status TicketStatus
  flowers Flower[]
  sales Sale[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sale {
  id Int @id @default(autoincrement())
  ticket Ticket @relation(fields: [ticketId], references: [id], onDelete: Cascade)
  ticketId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  createdAt DateTime @default(now())
  updatedFlowers String
  total Float
}

model FlowerCategory {
  id Int @id @default(autoincrement())
  name String
  flowers Flower[]
}
model Flower {
  id Int @id @default(autoincrement())
  status FlowerStatus
  amount Int
  Amount_sell Int?
  price Float
  min_amount Int?
  tickets Ticket @relation(fields: [ticketId], references: [id])
  flowerCategory FlowerCategory @relation(fields: [flowerCategoryId], references: [id], onDelete: Cascade)
  flowerCategoryId Int
  ticketId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


enum Role {
  ADMIN
  OWNER
}

enum FlowerStatus {
  Marchitas
  Frescas
  Vendidas
}

enum TicketType {
  Pedido
  Entregado
}

enum TicketStatus {
  Disponible
  Vendido
  Bajo
}
